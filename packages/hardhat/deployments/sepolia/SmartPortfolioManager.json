{
  "address": "0xE4e26b4F601335d78fb93DfF562Deca8C7163687",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newThreshold",
          "type": "uint256"
        }
      ],
      "name": "ApprovalThresholdUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "ManagementFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "PerformanceFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum SmartPortfolioManager.ProposalType",
          "name": "proposalType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newThreshold",
          "type": "uint256"
        }
      ],
      "name": "QuorumThresholdUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "vehicleId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "VehicleAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "vehicleId",
          "type": "uint256"
        }
      ],
      "name": "VehicleRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPeriod",
          "type": "uint256"
        }
      ],
      "name": "VotingPeriodUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_VEHICLES",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vehicleAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "addVehicle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "approvalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum SmartPortfolioManager.ProposalType",
          "name": "proposalType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "managementFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextProposalId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextVehicleId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "performanceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "enum SmartPortfolioManager.ProposalType",
          "name": "proposalType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorumThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalNav",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vehicles",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "vehicleAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2477b027322180c4848542c980cf8e81671341c0f2583b47050a26162ca8b1ab",
  "receipt": {
    "to": null,
    "from": "0x8B962d9E9c831a0a0A74c221dbf9df2d8C86E4e1",
    "contractAddress": "0xE4e26b4F601335d78fb93DfF562Deca8C7163687",
    "transactionIndex": 135,
    "gasUsed": "1978693",
    "logsBloom": "0x
    "blockHash": "0x9a5f204d40a38da85ede46699e68d811c7ee32f430ad791fd619352dd3d80c30",
    "transactionHash": "0x2477b027322180c4848542c980cf8e81671341c0f2583b47050a26162ca8b1ab",
    "logs": [
      {
        "transactionIndex": 135,
        "blockNumber": 6654328,
        "transactionHash": "0x2477b027322180c4848542c980cf8e81671341c0f2583b47050a26162ca8b1ab",
        "address": "0xE4e26b4F601335d78fb93DfF562Deca8C7163687",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008b962d9e9c831a0a0a74c221dbf9df2d8c86e4e1"
        ],
        "data": "0x",
        "logIndex": 182,
        "blockHash": "0x9a5f204d40a38da85ede46699e68d811c7ee32f430ad791fd619352dd3d80c30"
      }
    ],
    "blockNumber": 6654328,
    "cumulativeGasUsed": "20286805",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "Smart Portfolio",
    "SPT"
  ],
  "numDeployments": 2,
  "solcInputHash": "d1f2011cfc1b6a9e1eacd8ba58edc728",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newThreshold\",\"type\":\"uint256\"}],\"name\":\"ApprovalThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"ManagementFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"PerformanceFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum SmartPortfolioManager.ProposalType\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newThreshold\",\"type\":\"uint256\"}],\"name\":\"QuorumThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vehicleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"VehicleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vehicleId\",\"type\":\"uint256\"}],\"name\":\"VehicleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_VEHICLES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vehicleAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"addVehicle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approvalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum SmartPortfolioManager.ProposalType\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"createProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"managementFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextVehicleId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performanceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum SmartPortfolioManager.ProposalType\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalNav\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vehicles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"vehicleAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SmartPortfolioManager.sol\":\"SmartPortfolioManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/SmartPortfolioManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract SmartPortfolioManager is ERC20, ReentrancyGuard, Pausable, Ownable {\\n\\n    enum ProposalType { \\n        UpdateManagementFee, \\n        UpdatePerformanceFee, \\n        AddVehicle, \\n        RemoveVehicle, \\n        UpdateQuorumThreshold, \\n        UpdateApprovalThreshold,\\n        UpdateVotingPeriod\\n    }\\n\\nstruct Vehicle {\\n    uint256 id;\\n    string name;\\n    address vehicleAddress;\\n    bool active;\\n}\\n\\n    struct Proposal {\\n        uint256 id;\\n        ProposalType proposalType;\\n        string description;\\n        uint256 startTime;\\n        uint256 endTime;\\n        uint256 forVotes;\\n        uint256 againstVotes;\\n        bool executed;\\n        mapping(address => bool) hasVoted;\\n        bytes data; // Additional data for the proposal\\n    }\\n\\n    uint256 public constant MAX_VEHICLES = 10;\\n    uint256 public votingPeriod = 3 days;\\n    uint256 public quorumThreshold = 10; // 10%\\n    uint256 public approvalThreshold = 51; // 51%\\n\\n    uint256 public managementFee = 200; // 2% annual (in basis points)\\n    uint256 public performanceFee = 2000; // 20% (in basis points)\\n    uint256 public totalNav;\\n    uint256 public nextVehicleId = 1;\\n    uint256 public nextProposalId = 1;\\n\\n    mapping(uint256 => Vehicle) public vehicles;\\n    mapping(uint256 => Proposal) public proposals;\\n\\n    event ProposalCreated(uint256 indexed proposalId, ProposalType proposalType, string description);\\n    event Voted(address indexed voter, uint256 indexed proposalId, bool support);\\n    event ProposalExecuted(uint256 indexed proposalId);\\n    event ManagementFeeUpdated(uint256 newFee);\\n    event PerformanceFeeUpdated(uint256 newFee);\\n    event VehicleAdded(uint256 indexed vehicleId, string name);\\n    event VehicleRemoved(uint256 indexed vehicleId);\\n    event QuorumThresholdUpdated(uint256 newThreshold);\\n    event ApprovalThresholdUpdated(uint256 newThreshold);\\n    event VotingPeriodUpdated(uint256 newPeriod);\\n\\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) Ownable(msg.sender) {\\n        // Constructor logic\\n    }\\n\\n    function createProposal(ProposalType proposalType, string memory description, bytes memory data) external {\\n        uint256 proposalId = nextProposalId++;\\n        Proposal storage newProposal = proposals[proposalId];\\n        newProposal.id = proposalId;\\n        newProposal.proposalType = proposalType;\\n        newProposal.description = description;\\n        newProposal.startTime = block.timestamp;\\n        newProposal.endTime = block.timestamp + votingPeriod;\\n        newProposal.data = data;\\n        \\n        emit ProposalCreated(proposalId, proposalType, description);\\n    }\\n\\n    function vote(uint256 proposalId, bool support) external {\\n        Proposal storage proposal = proposals[proposalId];\\n        require(block.timestamp >= proposal.startTime && block.timestamp <= proposal.endTime, \\\"Voting is not active\\\");\\n        require(!proposal.hasVoted[msg.sender], \\\"Already voted\\\");\\n        \\n        uint256 votingPower = balanceOf(msg.sender);\\n        if (support) {\\n            proposal.forVotes += votingPower;\\n        } else {\\n            proposal.againstVotes += votingPower;\\n        }\\n        proposal.hasVoted[msg.sender] = true;\\n        \\n        emit Voted(msg.sender, proposalId, support);\\n    }\\n\\n    function executeProposal(uint256 proposalId) external onlyOwner {\\n        Proposal storage proposal = proposals[proposalId];\\n        require(block.timestamp > proposal.endTime, \\\"Voting period not ended\\\");\\n        require(!proposal.executed, \\\"Proposal already executed\\\");\\n        \\n        uint256 totalVotes = proposal.forVotes + proposal.againstVotes;\\n        uint256 quorum = (totalSupply() * quorumThreshold) / 100;\\n        require(totalVotes >= quorum, \\\"Quorum not reached\\\");\\n        \\n        uint256 approvalRate = (proposal.forVotes * 100) / totalVotes;\\n        require(approvalRate >= approvalThreshold, \\\"Proposal not approved\\\");\\n        \\n        proposal.executed = true;\\n        \\n        if (proposal.proposalType == ProposalType.UpdateManagementFee) {\\n            uint256 newFee = abi.decode(proposal.data, (uint256));\\n            managementFee = newFee;\\n            emit ManagementFeeUpdated(newFee);\\n        } else if (proposal.proposalType == ProposalType.UpdatePerformanceFee) {\\n            uint256 newFee = abi.decode(proposal.data, (uint256));\\n            performanceFee = newFee;\\n            emit PerformanceFeeUpdated(newFee);\\n        } else if (proposal.proposalType == ProposalType.AddVehicle) {\\n            (string memory name, address vehicleAddress) = abi.decode(proposal.data, (string, address));\\n            uint256 vehicleId = nextVehicleId++;\\n            vehicles[vehicleId].id = vehicleId;\\n            vehicles[vehicleId].name = name;\\n            // Additional logic to set up the new vehicle\\n            emit VehicleAdded(vehicleId, name);\\n        } else if (proposal.proposalType == ProposalType.RemoveVehicle) {\\n            uint256 vehicleId = abi.decode(proposal.data, (uint256));\\n            delete vehicles[vehicleId];\\n            emit VehicleRemoved(vehicleId);\\n        } else if (proposal.proposalType == ProposalType.UpdateQuorumThreshold) {\\n            uint256 newThreshold = abi.decode(proposal.data, (uint256));\\n            quorumThreshold = newThreshold;\\n            emit QuorumThresholdUpdated(newThreshold);\\n        } else if (proposal.proposalType == ProposalType.UpdateApprovalThreshold) {\\n            uint256 newThreshold = abi.decode(proposal.data, (uint256));\\n            approvalThreshold = newThreshold;\\n            emit ApprovalThresholdUpdated(newThreshold);\\n        } else if (proposal.proposalType == ProposalType.UpdateVotingPeriod) {\\n            uint256 newPeriod = abi.decode(proposal.data, (uint256));\\n            votingPeriod = newPeriod;\\n            emit VotingPeriodUpdated(newPeriod);\\n        }\\n        \\n        emit ProposalExecuted(proposalId);\\n    }\\n    \\n    function addVehicle(address vehicleAddress, string memory name) external onlyOwner {\\n        vehicles[nextVehicleId] = Vehicle({\\n            id: nextVehicleId,\\n            name: name,\\n            vehicleAddress: vehicleAddress,\\n            active: true\\n        });\\n        nextVehicleId++;\\n    }\\n    // Additional helper functions and admin functions would be implemented here\\n}\\n\",\"keccak256\":\"0xa3622a52dd610459de2caec53a4f686f0dca84487a8d3d0083a06e1d07e5f40e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526203f480600755600a600855603360095560c8600a556107d0600b556001600d556001600e553480156200003757600080fd5b50604051620021d8380380620021d88339810160408190526200005a91620001ee565b33828260036200006b8382620002e7565b5060046200007a8282620002e7565b50506001600555506006805460ff191690556001600160a01b038116620000bb57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000c681620000cf565b505050620003b3565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015157600080fd5b81516001600160401b03808211156200016e576200016e62000129565b604051601f8301601f19908116603f0116810190828211818310171562000199576200019962000129565b81604052838152602092508683858801011115620001b657600080fd5b600091505b83821015620001da5785820183015181830184015290820190620001bb565b600093810190920192909252949350505050565b600080604083850312156200020257600080fd5b82516001600160401b03808211156200021a57600080fd5b62000228868387016200013f565b935060208501519150808211156200023f57600080fd5b506200024e858286016200013f565b9150509250929050565b600181811c908216806200026d57607f821691505b6020821081036200028e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002e257600081815260208120601f850160051c81016020861015620002bd5750805b601f850160051c820191505b81811015620002de57828155600101620002c9565b5050505b505050565b81516001600160401b0381111562000303576200030362000129565b6200031b8162000314845462000258565b8462000294565b602080601f8311600181146200035357600084156200033a5750858301515b600019600386901b1c1916600185901b178555620002de565b600085815260208120601f198616915b82811015620003845788860151825594840194600190910190840162000363565b5085821015620003a35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611e1580620003c36000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80637616992b116100f9578063a9059cbb11610097578063c9d27afe11610071578063c9d27afe14610385578063dd62ed3e14610398578063f2fde38b146103d1578063fcfae633146103e457600080fd5b8063a9059cbb1461033c578063b8b510931461034f578063b8ba95fa1461036257600080fd5b806387788782116100d357806387788782146102f95780638da5cb5b1461030257806395d89b411461032b578063a6f7f5d61461033357600080fd5b80637616992b146102df5780637b7a91dd146102e75780637d0eef61146102f057600080fd5b80632ab09d14116101665780634acdca9f116101405780634acdca9f1461029a5780635c975abb146102a357806370a08231146102ae578063715018a6146102d757600080fd5b80632ab09d1414610279578063313ce5671461028257806336f90a8c1461029157600080fd5b8063095ea7b3116101a2578063095ea7b3146102265780630d61b5191461024957806318160ddd1461025e57806323b872dd1461026657600080fd5b8063013cf08b146101c957806302a251a3146101fa57806306fdde0314610211575b600080fd5b6101dc6101d736600461174a565b6103f7565b6040516101f1999897969594939291906117eb565b60405180910390f35b61020360075481565b6040519081526020016101f1565b61021961055f565b6040516101f19190611857565b610239610234366004611886565b6105f1565b60405190151581526020016101f1565b61025c61025736600461174a565b61060b565b005b600254610203565b6102396102743660046118b2565b610f54565b610203600e5481565b604051601281526020016101f1565b610203600c5481565b610203600d5481565b60065460ff16610239565b6102036102bc3660046118f3565b6001600160a01b031660009081526020819052604090205490565b61025c610f78565b610203600a81565b61020360085481565b61020360095481565b610203600b5481565b60065461010090046001600160a01b03166040516001600160a01b0390911681526020016101f1565b610219610f8c565b610203600a5481565b61023961034a366004611886565b610f9b565b61025c61035d3660046119dd565b610fa9565b61037561037036600461174a565b611074565b6040516101f19493929190611a6b565b61025c610393366004611aa5565b611135565b6102036103a6366004611ada565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61025c6103df3660046118f3565b6112a0565b61025c6103f2366004611b08565b6112de565b601060205260009081526040902080546001820154600283018054929360ff9092169261042390611b58565b80601f016020809104026020016040519081016040528092919081815260200182805461044f90611b58565b801561049c5780601f106104715761010080835404028352916020019161049c565b820191906000526020600020905b81548152906001019060200180831161047f57829003601f168201915b5050505050908060030154908060040154908060050154908060060154908060070160009054906101000a900460ff16908060090180546104dc90611b58565b80601f016020809104026020016040519081016040528092919081815260200182805461050890611b58565b80156105555780601f1061052a57610100808354040283529160200191610555565b820191906000526020600020905b81548152906001019060200180831161053857829003601f168201915b5050505050905089565b60606003805461056e90611b58565b80601f016020809104026020016040519081016040528092919081815260200182805461059a90611b58565b80156105e75780601f106105bc576101008083540402835291602001916105e7565b820191906000526020600020905b8154815290600101906020018083116105ca57829003601f168201915b5050505050905090565b6000336105ff81858561138f565b60019150505b92915050565b6106136113a1565b6000818152601060205260409020600481015442116106795760405162461bcd60e51b815260206004820152601760248201527f566f74696e6720706572696f64206e6f7420656e64656400000000000000000060448201526064015b60405180910390fd5b600781015460ff16156106ce5760405162461bcd60e51b815260206004820152601960248201527f50726f706f73616c20616c7265616479206578656375746564000000000000006044820152606401610670565b6000816006015482600501546106e49190611ba8565b9050600060646008546106f660025490565b6107009190611bbb565b61070a9190611bd2565b9050808210156107515760405162461bcd60e51b8152602060048201526012602482015271145d5bdc9d5b481b9bdd081c995858da195960721b6044820152606401610670565b600082846005015460646107659190611bbb565b61076f9190611bd2565b90506009548110156107bb5760405162461bcd60e51b8152602060048201526015602482015274141c9bdc1bdcd85b081b9bdd08185c1c1c9bdd9959605a1b6044820152606401610670565b60078401805460ff191660011790556000600185015460ff1660068111156107e5576107e5611763565b036108ce5760008460090180546107fb90611b58565b80601f016020809104026020016040519081016040528092919081815260200182805461082790611b58565b80156108745780601f1061084957610100808354040283529160200191610874565b820191906000526020600020905b81548152906001019060200180831161085757829003601f168201915b505050505080602001905181019061088c9190611bf4565b600a8190556040518181529091507f2147e2bc8c39e67f74b1a9e08896ea1485442096765942206af1f4bc8bcde917906020015b60405180910390a150610f22565b60018085015460ff1660068111156108e8576108e8611763565b036109c75760008460090180546108fe90611b58565b80601f016020809104026020016040519081016040528092919081815260200182805461092a90611b58565b80156109775780601f1061094c57610100808354040283529160200191610977565b820191906000526020600020905b81548152906001019060200180831161095a57829003601f168201915b505050505080602001905181019061098f9190611bf4565b600b8190556040518181529091507f9b49d0cd76012d9c67241c2f68f836efbaf50ea29901a250040671402d5263f5906020016108c0565b6002600185015460ff1660068111156109e2576109e2611763565b03610b09576000808560090180546109f990611b58565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2590611b58565b8015610a725780601f10610a4757610100808354040283529160200191610a72565b820191906000526020600020905b815481529060010190602001808311610a5557829003601f168201915b5050505050806020019051810190610a8a9190611c0d565b915091506000600d6000815480929190610aa390611c90565b909155506000818152600f60205260409020818155909150600101610ac88482611cf7565b50807f269f5baa88798b226ba05396ab724299859f163fcd95f49400b61d4eaeb4a06884604051610af99190611857565b60405180910390a2505050610f22565b6003600185015460ff166006811115610b2457610b24611763565b03610c2f576000846009018054610b3a90611b58565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6690611b58565b8015610bb35780601f10610b8857610100808354040283529160200191610bb3565b820191906000526020600020905b815481529060010190602001808311610b9657829003601f168201915b5050505050806020019051810190610bcb9190611bf4565b6000818152600f60205260408120818155919250610bec60018301826116fc565b5060020180546001600160a81b031916905560405181907f9023ae4d22b56ac64534fdab7547c0f9d26367b9a4a3c6638c474a41b5ba744990600090a250610f22565b6004600185015460ff166006811115610c4a57610c4a611763565b03610d29576000846009018054610c6090611b58565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8c90611b58565b8015610cd95780601f10610cae57610100808354040283529160200191610cd9565b820191906000526020600020905b815481529060010190602001808311610cbc57829003601f168201915b5050505050806020019051810190610cf19190611bf4565b60088190556040518181529091507fbc589fccf641d342b7853c2c6faca39631d4d19efbe77e71e5611e31678c220e906020016108c0565b6005600185015460ff166006811115610d4457610d44611763565b03610e23576000846009018054610d5a90611b58565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8690611b58565b8015610dd35780601f10610da857610100808354040283529160200191610dd3565b820191906000526020600020905b815481529060010190602001808311610db657829003601f168201915b5050505050806020019051810190610deb9190611bf4565b60098190556040518181529091507f3105a3dc553e12034caac9827a83c245fe17eef4ee1eedb45238ac7449a5bbec906020016108c0565b6006600185015460ff166006811115610e3e57610e3e611763565b03610f22576000846009018054610e5490611b58565b80601f0160208091040260200160405190810160405280929190818152602001828054610e8090611b58565b8015610ecd5780601f10610ea257610100808354040283529160200191610ecd565b820191906000526020600020905b815481529060010190602001808311610eb057829003601f168201915b5050505050806020019051810190610ee59190611bf4565b60078190556040518181529091507f651c77f42613a075437aa794c44471e3abc3a661956a67aaee165bb7396974aa9060200160405180910390a1505b60405185907f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f90600090a25050505050565b600033610f628582856113d4565b610f6d858585611452565b506001949350505050565b610f806113a1565b610f8a60006114b1565b565b60606004805461056e90611b58565b6000336105ff818585611452565b600e805460009182610fba83611c90565b90915550600081815260106020526040902081815560018082018054939450919287929160ff1990911690836006811115610ff757610ff7611763565b02179055506002810161100a8582611cf7565b50426003820181905560075461101f91611ba8565b6004820155600981016110328482611cf7565b50817f2d6a2a1a504050a1fa6107e44f49971fd89dbe544b433d65f1c572ce5fa3b7d18686604051611065929190611db7565b60405180910390a25050505050565b600f602052600090815260409020805460018201805491929161109690611b58565b80601f01602080910402602001604051908101604052809291908181526020018280546110c290611b58565b801561110f5780601f106110e45761010080835404028352916020019161110f565b820191906000526020600020905b8154815290600101906020018083116110f257829003601f168201915b505050600290930154919250506001600160a01b0381169060ff600160a01b9091041684565b60008281526010602052604090206003810154421080159061115b575080600401544211155b61119e5760405162461bcd60e51b8152602060048201526014602482015273566f74696e67206973206e6f742061637469766560601b6044820152606401610670565b33600090815260088201602052604090205460ff16156111f05760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b6044820152606401610670565b336000908152602081905260409020548215611225578082600501600082825461121a9190611ba8565b9091555061123f9050565b808260060160008282546112399190611ba8565b90915550505b33600081815260088401602052604090819020805460ff19166001179055518591907f749addf8eadeff63c43be59c27331be5c6d4fc9e82bbfbcf162321c9b35a95b49061129290871515815260200190565b60405180910390a350505050565b6112a86113a1565b6001600160a01b0381166112d257604051631e4fbdf760e01b815260006004820152602401610670565b6112db816114b1565b50565b6112e66113a1565b60408051608081018252600d5480825260208083018581526001600160a01b038716848601526001606085018190526000938452600f909252939091208251815592519192919082019061133a9082611cf7565b506040820151600290910180546060909301511515600160a01b026001600160a81b03199093166001600160a01b0390921691909117919091179055600d805490600061138683611c90565b91905055505050565b61139c838383600161150b565b505050565b6006546001600160a01b03610100909104163314610f8a5760405163118cdaa760e01b8152336004820152602401610670565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461144c578181101561143d57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610670565b61144c8484848403600061150b565b50505050565b6001600160a01b03831661147c57604051634b637e8f60e11b815260006004820152602401610670565b6001600160a01b0382166114a65760405163ec442f0560e01b815260006004820152602401610670565b61139c8383836115d2565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166115355760405163e602df0560e01b815260006004820152602401610670565b6001600160a01b03831661155f57604051634a1406b160e11b815260006004820152602401610670565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561144c57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161129291815260200190565b6001600160a01b0383166115fd5780600260008282546115f29190611ba8565b9091555061166f9050565b6001600160a01b038316600090815260208190526040902054818110156116505760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610670565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661168b576002805482900390556116aa565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516116ef91815260200190565b60405180910390a3505050565b50805461170890611b58565b6000825580601f10611718575050565b601f0160209004906000526020600020908101906112db91905b808211156117465760008155600101611732565b5090565b60006020828403121561175c57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6007811061179757634e487b7160e01b600052602160045260246000fd5b9052565b60005b838110156117b657818101518382015260200161179e565b50506000910152565b600081518084526117d781602086016020860161179b565b601f01601f19169290920160200192915050565b60006101208b8352611800602084018c611779565b8060408401526118128184018b6117bf565b90508860608401528760808401528660a08401528560c084015284151560e084015282810361010084015261184781856117bf565b9c9b505050505050505050505050565b60208152600061186a60208301846117bf565b9392505050565b6001600160a01b03811681146112db57600080fd5b6000806040838503121561189957600080fd5b82356118a481611871565b946020939093013593505050565b6000806000606084860312156118c757600080fd5b83356118d281611871565b925060208401356118e281611871565b929592945050506040919091013590565b60006020828403121561190557600080fd5b813561186a81611871565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561194f5761194f611910565b604052919050565b600067ffffffffffffffff82111561197157611971611910565b50601f01601f191660200190565b600061199261198d84611957565b611926565b90508281528383830111156119a657600080fd5b828260208301376000602084830101529392505050565b600082601f8301126119ce57600080fd5b61186a8383356020850161197f565b6000806000606084860312156119f257600080fd5b833560078110611a0157600080fd5b9250602084013567ffffffffffffffff80821115611a1e57600080fd5b611a2a878388016119bd565b93506040860135915080821115611a4057600080fd5b508401601f81018613611a5257600080fd5b611a618682356020840161197f565b9150509250925092565b848152608060208201526000611a8460808301866117bf565b6001600160a01b039490941660408301525090151560609091015292915050565b60008060408385031215611ab857600080fd5b8235915060208301358015158114611acf57600080fd5b809150509250929050565b60008060408385031215611aed57600080fd5b8235611af881611871565b91506020830135611acf81611871565b60008060408385031215611b1b57600080fd5b8235611b2681611871565b9150602083013567ffffffffffffffff811115611b4257600080fd5b611b4e858286016119bd565b9150509250929050565b600181811c90821680611b6c57607f821691505b602082108103611b8c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561060557610605611b92565b808202811582820484141761060557610605611b92565b600082611bef57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611c0657600080fd5b5051919050565b60008060408385031215611c2057600080fd5b825167ffffffffffffffff811115611c3757600080fd5b8301601f81018513611c4857600080fd5b8051611c5661198d82611957565b818152866020838501011115611c6b57600080fd5b611c7c82602083016020860161179b565b8094505050506020830151611acf81611871565b600060018201611ca257611ca2611b92565b5060010190565b601f82111561139c57600081815260208120601f850160051c81016020861015611cd05750805b601f850160051c820191505b81811015611cef57828155600101611cdc565b505050505050565b815167ffffffffffffffff811115611d1157611d11611910565b611d2581611d1f8454611b58565b84611ca9565b602080601f831160018114611d5a5760008415611d425750858301515b600019600386901b1c1916600185901b178555611cef565b600085815260208120601f198616915b82811015611d8957888601518255948401946001909101908401611d6a565b5085821015611da75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611dc18184611779565b604060208201526000611dd760408301846117bf565b94935050505056fea2646970667358221220781c0cc7fbbb810228a2236c70f03bf170a83816ff09957716a0ae23e53012b664736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c80637616992b116100f9578063a9059cbb11610097578063c9d27afe11610071578063c9d27afe14610385578063dd62ed3e14610398578063f2fde38b146103d1578063fcfae633146103e457600080fd5b8063a9059cbb1461033c578063b8b510931461034f578063b8ba95fa1461036257600080fd5b806387788782116100d357806387788782146102f95780638da5cb5b1461030257806395d89b411461032b578063a6f7f5d61461033357600080fd5b80637616992b146102df5780637b7a91dd146102e75780637d0eef61146102f057600080fd5b80632ab09d14116101665780634acdca9f116101405780634acdca9f1461029a5780635c975abb146102a357806370a08231146102ae578063715018a6146102d757600080fd5b80632ab09d1414610279578063313ce5671461028257806336f90a8c1461029157600080fd5b8063095ea7b3116101a2578063095ea7b3146102265780630d61b5191461024957806318160ddd1461025e57806323b872dd1461026657600080fd5b8063013cf08b146101c957806302a251a3146101fa57806306fdde0314610211575b600080fd5b6101dc6101d736600461174a565b6103f7565b6040516101f1999897969594939291906117eb565b60405180910390f35b61020360075481565b6040519081526020016101f1565b61021961055f565b6040516101f19190611857565b610239610234366004611886565b6105f1565b60405190151581526020016101f1565b61025c61025736600461174a565b61060b565b005b600254610203565b6102396102743660046118b2565b610f54565b610203600e5481565b604051601281526020016101f1565b610203600c5481565b610203600d5481565b60065460ff16610239565b6102036102bc3660046118f3565b6001600160a01b031660009081526020819052604090205490565b61025c610f78565b610203600a81565b61020360085481565b61020360095481565b610203600b5481565b60065461010090046001600160a01b03166040516001600160a01b0390911681526020016101f1565b610219610f8c565b610203600a5481565b61023961034a366004611886565b610f9b565b61025c61035d3660046119dd565b610fa9565b61037561037036600461174a565b611074565b6040516101f19493929190611a6b565b61025c610393366004611aa5565b611135565b6102036103a6366004611ada565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61025c6103df3660046118f3565b6112a0565b61025c6103f2366004611b08565b6112de565b601060205260009081526040902080546001820154600283018054929360ff9092169261042390611b58565b80601f016020809104026020016040519081016040528092919081815260200182805461044f90611b58565b801561049c5780601f106104715761010080835404028352916020019161049c565b820191906000526020600020905b81548152906001019060200180831161047f57829003601f168201915b5050505050908060030154908060040154908060050154908060060154908060070160009054906101000a900460ff16908060090180546104dc90611b58565b80601f016020809104026020016040519081016040528092919081815260200182805461050890611b58565b80156105555780601f1061052a57610100808354040283529160200191610555565b820191906000526020600020905b81548152906001019060200180831161053857829003601f168201915b5050505050905089565b60606003805461056e90611b58565b80601f016020809104026020016040519081016040528092919081815260200182805461059a90611b58565b80156105e75780601f106105bc576101008083540402835291602001916105e7565b820191906000526020600020905b8154815290600101906020018083116105ca57829003601f168201915b5050505050905090565b6000336105ff81858561138f565b60019150505b92915050565b6106136113a1565b6000818152601060205260409020600481015442116106795760405162461bcd60e51b815260206004820152601760248201527f566f74696e6720706572696f64206e6f7420656e64656400000000000000000060448201526064015b60405180910390fd5b600781015460ff16156106ce5760405162461bcd60e51b815260206004820152601960248201527f50726f706f73616c20616c7265616479206578656375746564000000000000006044820152606401610670565b6000816006015482600501546106e49190611ba8565b9050600060646008546106f660025490565b6107009190611bbb565b61070a9190611bd2565b9050808210156107515760405162461bcd60e51b8152602060048201526012602482015271145d5bdc9d5b481b9bdd081c995858da195960721b6044820152606401610670565b600082846005015460646107659190611bbb565b61076f9190611bd2565b90506009548110156107bb5760405162461bcd60e51b8152602060048201526015602482015274141c9bdc1bdcd85b081b9bdd08185c1c1c9bdd9959605a1b6044820152606401610670565b60078401805460ff191660011790556000600185015460ff1660068111156107e5576107e5611763565b036108ce5760008460090180546107fb90611b58565b80601f016020809104026020016040519081016040528092919081815260200182805461082790611b58565b80156108745780601f1061084957610100808354040283529160200191610874565b820191906000526020600020905b81548152906001019060200180831161085757829003601f168201915b505050505080602001905181019061088c9190611bf4565b600a8190556040518181529091507f2147e2bc8c39e67f74b1a9e08896ea1485442096765942206af1f4bc8bcde917906020015b60405180910390a150610f22565b60018085015460ff1660068111156108e8576108e8611763565b036109c75760008460090180546108fe90611b58565b80601f016020809104026020016040519081016040528092919081815260200182805461092a90611b58565b80156109775780601f1061094c57610100808354040283529160200191610977565b820191906000526020600020905b81548152906001019060200180831161095a57829003601f168201915b505050505080602001905181019061098f9190611bf4565b600b8190556040518181529091507f9b49d0cd76012d9c67241c2f68f836efbaf50ea29901a250040671402d5263f5906020016108c0565b6002600185015460ff1660068111156109e2576109e2611763565b03610b09576000808560090180546109f990611b58565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2590611b58565b8015610a725780601f10610a4757610100808354040283529160200191610a72565b820191906000526020600020905b815481529060010190602001808311610a5557829003601f168201915b5050505050806020019051810190610a8a9190611c0d565b915091506000600d6000815480929190610aa390611c90565b909155506000818152600f60205260409020818155909150600101610ac88482611cf7565b50807f269f5baa88798b226ba05396ab724299859f163fcd95f49400b61d4eaeb4a06884604051610af99190611857565b60405180910390a2505050610f22565b6003600185015460ff166006811115610b2457610b24611763565b03610c2f576000846009018054610b3a90611b58565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6690611b58565b8015610bb35780601f10610b8857610100808354040283529160200191610bb3565b820191906000526020600020905b815481529060010190602001808311610b9657829003601f168201915b5050505050806020019051810190610bcb9190611bf4565b6000818152600f60205260408120818155919250610bec60018301826116fc565b5060020180546001600160a81b031916905560405181907f9023ae4d22b56ac64534fdab7547c0f9d26367b9a4a3c6638c474a41b5ba744990600090a250610f22565b6004600185015460ff166006811115610c4a57610c4a611763565b03610d29576000846009018054610c6090611b58565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8c90611b58565b8015610cd95780601f10610cae57610100808354040283529160200191610cd9565b820191906000526020600020905b815481529060010190602001808311610cbc57829003601f168201915b5050505050806020019051810190610cf19190611bf4565b60088190556040518181529091507fbc589fccf641d342b7853c2c6faca39631d4d19efbe77e71e5611e31678c220e906020016108c0565b6005600185015460ff166006811115610d4457610d44611763565b03610e23576000846009018054610d5a90611b58565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8690611b58565b8015610dd35780601f10610da857610100808354040283529160200191610dd3565b820191906000526020600020905b815481529060010190602001808311610db657829003601f168201915b5050505050806020019051810190610deb9190611bf4565b60098190556040518181529091507f3105a3dc553e12034caac9827a83c245fe17eef4ee1eedb45238ac7449a5bbec906020016108c0565b6006600185015460ff166006811115610e3e57610e3e611763565b03610f22576000846009018054610e5490611b58565b80601f0160208091040260200160405190810160405280929190818152602001828054610e8090611b58565b8015610ecd5780601f10610ea257610100808354040283529160200191610ecd565b820191906000526020600020905b815481529060010190602001808311610eb057829003601f168201915b5050505050806020019051810190610ee59190611bf4565b60078190556040518181529091507f651c77f42613a075437aa794c44471e3abc3a661956a67aaee165bb7396974aa9060200160405180910390a1505b60405185907f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f90600090a25050505050565b600033610f628582856113d4565b610f6d858585611452565b506001949350505050565b610f806113a1565b610f8a60006114b1565b565b60606004805461056e90611b58565b6000336105ff818585611452565b600e805460009182610fba83611c90565b90915550600081815260106020526040902081815560018082018054939450919287929160ff1990911690836006811115610ff757610ff7611763565b02179055506002810161100a8582611cf7565b50426003820181905560075461101f91611ba8565b6004820155600981016110328482611cf7565b50817f2d6a2a1a504050a1fa6107e44f49971fd89dbe544b433d65f1c572ce5fa3b7d18686604051611065929190611db7565b60405180910390a25050505050565b600f602052600090815260409020805460018201805491929161109690611b58565b80601f01602080910402602001604051908101604052809291908181526020018280546110c290611b58565b801561110f5780601f106110e45761010080835404028352916020019161110f565b820191906000526020600020905b8154815290600101906020018083116110f257829003601f168201915b505050600290930154919250506001600160a01b0381169060ff600160a01b9091041684565b60008281526010602052604090206003810154421080159061115b575080600401544211155b61119e5760405162461bcd60e51b8152602060048201526014602482015273566f74696e67206973206e6f742061637469766560601b6044820152606401610670565b33600090815260088201602052604090205460ff16156111f05760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b6044820152606401610670565b336000908152602081905260409020548215611225578082600501600082825461121a9190611ba8565b9091555061123f9050565b808260060160008282546112399190611ba8565b90915550505b33600081815260088401602052604090819020805460ff19166001179055518591907f749addf8eadeff63c43be59c27331be5c6d4fc9e82bbfbcf162321c9b35a95b49061129290871515815260200190565b60405180910390a350505050565b6112a86113a1565b6001600160a01b0381166112d257604051631e4fbdf760e01b815260006004820152602401610670565b6112db816114b1565b50565b6112e66113a1565b60408051608081018252600d5480825260208083018581526001600160a01b038716848601526001606085018190526000938452600f909252939091208251815592519192919082019061133a9082611cf7565b506040820151600290910180546060909301511515600160a01b026001600160a81b03199093166001600160a01b0390921691909117919091179055600d805490600061138683611c90565b91905055505050565b61139c838383600161150b565b505050565b6006546001600160a01b03610100909104163314610f8a5760405163118cdaa760e01b8152336004820152602401610670565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461144c578181101561143d57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610670565b61144c8484848403600061150b565b50505050565b6001600160a01b03831661147c57604051634b637e8f60e11b815260006004820152602401610670565b6001600160a01b0382166114a65760405163ec442f0560e01b815260006004820152602401610670565b61139c8383836115d2565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166115355760405163e602df0560e01b815260006004820152602401610670565b6001600160a01b03831661155f57604051634a1406b160e11b815260006004820152602401610670565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561144c57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161129291815260200190565b6001600160a01b0383166115fd5780600260008282546115f29190611ba8565b9091555061166f9050565b6001600160a01b038316600090815260208190526040902054818110156116505760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610670565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661168b576002805482900390556116aa565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516116ef91815260200190565b60405180910390a3505050565b50805461170890611b58565b6000825580601f10611718575050565b601f0160209004906000526020600020908101906112db91905b808211156117465760008155600101611732565b5090565b60006020828403121561175c57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6007811061179757634e487b7160e01b600052602160045260246000fd5b9052565b60005b838110156117b657818101518382015260200161179e565b50506000910152565b600081518084526117d781602086016020860161179b565b601f01601f19169290920160200192915050565b60006101208b8352611800602084018c611779565b8060408401526118128184018b6117bf565b90508860608401528760808401528660a08401528560c084015284151560e084015282810361010084015261184781856117bf565b9c9b505050505050505050505050565b60208152600061186a60208301846117bf565b9392505050565b6001600160a01b03811681146112db57600080fd5b6000806040838503121561189957600080fd5b82356118a481611871565b946020939093013593505050565b6000806000606084860312156118c757600080fd5b83356118d281611871565b925060208401356118e281611871565b929592945050506040919091013590565b60006020828403121561190557600080fd5b813561186a81611871565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561194f5761194f611910565b604052919050565b600067ffffffffffffffff82111561197157611971611910565b50601f01601f191660200190565b600061199261198d84611957565b611926565b90508281528383830111156119a657600080fd5b828260208301376000602084830101529392505050565b600082601f8301126119ce57600080fd5b61186a8383356020850161197f565b6000806000606084860312156119f257600080fd5b833560078110611a0157600080fd5b9250602084013567ffffffffffffffff80821115611a1e57600080fd5b611a2a878388016119bd565b93506040860135915080821115611a4057600080fd5b508401601f81018613611a5257600080fd5b611a618682356020840161197f565b9150509250925092565b848152608060208201526000611a8460808301866117bf565b6001600160a01b039490941660408301525090151560609091015292915050565b60008060408385031215611ab857600080fd5b8235915060208301358015158114611acf57600080fd5b809150509250929050565b60008060408385031215611aed57600080fd5b8235611af881611871565b91506020830135611acf81611871565b60008060408385031215611b1b57600080fd5b8235611b2681611871565b9150602083013567ffffffffffffffff811115611b4257600080fd5b611b4e858286016119bd565b9150509250929050565b600181811c90821680611b6c57607f821691505b602082108103611b8c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561060557610605611b92565b808202811582820484141761060557610605611b92565b600082611bef57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611c0657600080fd5b5051919050565b60008060408385031215611c2057600080fd5b825167ffffffffffffffff811115611c3757600080fd5b8301601f81018513611c4857600080fd5b8051611c5661198d82611957565b818152866020838501011115611c6b57600080fd5b611c7c82602083016020860161179b565b8094505050506020830151611acf81611871565b600060018201611ca257611ca2611b92565b5060010190565b601f82111561139c57600081815260208120601f850160051c81016020861015611cd05750805b601f850160051c820191505b81811015611cef57828155600101611cdc565b505050505050565b815167ffffffffffffffff811115611d1157611d11611910565b611d2581611d1f8454611b58565b84611ca9565b602080601f831160018114611d5a5760008415611d425750858301515b600019600386901b1c1916600185901b178555611cef565b600085815260208120601f198616915b82811015611d8957888601518255948401946001909101908401611d6a565b5085821015611da75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611dc18184611779565b604060208201526000611dd760408301846117bf565b94935050505056fea2646970667358221220781c0cc7fbbb810228a2236c70f03bf170a83816ff09957716a0ae23e53012b664736f6c63430008140033",
  "devdoc": {
    "errors": {
      "ERC20InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC20InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC20InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "EnforcedPause()": [
        {
          "details": "The operation failed because the contract is paused."
        }
      ],
      "ExpectedPause()": [
        {
          "details": "The operation failed because the contract is not paused."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 732,
        "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 738,
        "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 740,
        "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 742,
        "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 744,
        "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 2065,
        "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
        "label": "_status",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1946,
        "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
        "label": "_paused",
        "offset": 0,
        "slot": "6",
        "type": "t_bool"
      },
      {
        "astId": 433,
        "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
        "label": "_owner",
        "offset": 1,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 3480,
        "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
        "label": "votingPeriod",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 3483,
        "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
        "label": "quorumThreshold",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 3486,
        "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
        "label": "approvalThreshold",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 3489,
        "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
        "label": "managementFee",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 3492,
        "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
        "label": "performanceFee",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 3494,
        "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
        "label": "totalNav",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 3497,
        "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
        "label": "nextVehicleId",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 3500,
        "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
        "label": "nextProposalId",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 3505,
        "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
        "label": "vehicles",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_uint256,t_struct(Vehicle)3450_storage)"
      },
      {
        "astId": 3510,
        "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
        "label": "proposals",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_uint256,t_struct(Proposal)3474_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_enum(ProposalType)3441": {
        "encoding": "inplace",
        "label": "enum SmartPortfolioManager.ProposalType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Proposal)3474_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct SmartPortfolioManager.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)3474_storage"
      },
      "t_mapping(t_uint256,t_struct(Vehicle)3450_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct SmartPortfolioManager.Vehicle)",
        "numberOfBytes": "32",
        "value": "t_struct(Vehicle)3450_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)3474_storage": {
        "encoding": "inplace",
        "label": "struct SmartPortfolioManager.Proposal",
        "members": [
          {
            "astId": 3452,
            "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 3455,
            "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
            "label": "proposalType",
            "offset": 0,
            "slot": "1",
            "type": "t_enum(ProposalType)3441"
          },
          {
            "astId": 3457,
            "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 3459,
            "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
            "label": "startTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 3461,
            "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
            "label": "endTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 3463,
            "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
            "label": "forVotes",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 3465,
            "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
            "label": "againstVotes",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 3467,
            "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
            "label": "executed",
            "offset": 0,
            "slot": "7",
            "type": "t_bool"
          },
          {
            "astId": 3471,
            "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
            "label": "hasVoted",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 3473,
            "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
            "label": "data",
            "offset": 0,
            "slot": "9",
            "type": "t_bytes_storage"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(Vehicle)3450_storage": {
        "encoding": "inplace",
        "label": "struct SmartPortfolioManager.Vehicle",
        "members": [
          {
            "astId": 3443,
            "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 3445,
            "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 3447,
            "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
            "label": "vehicleAddress",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 3449,
            "contract": "contracts/SmartPortfolioManager.sol:SmartPortfolioManager",
            "label": "active",
            "offset": 20,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}